import * as linter from 'atom/linter';
import * as atom from 'atom';
import { Diagnostic, DiagnosticRelatedInformation, DiagnosticCode, LanguageClientConnection, PublishDiagnosticsParams } from '../languageclient';
export default class LinterPushV2Adapter {
    private _diagnosticMap;
    private _diagnosticCodes;
    private _indies;
    constructor(connection: LanguageClientConnection);
    dispose(): void;
    attach(indie: linter.IndieDelegate): void;
    detachAll(): void;
    captureDiagnostics(params: PublishDiagnosticsParams): void;
    diagnosticToV2Message(path: string, diagnostic: Diagnostic): linter.Message;
    /**
     * Creates a markdown formatted string representing the related information.
     * @param  relatedInformation The related information
     * @return                    The markdown formatted string
     */
    diagnosticRelatedInformation(relatedInformation: DiagnosticRelatedInformation): string;
    /**
     * Creates a markdown formatted link that opens the given file.
     * It also moves the cursor to the given point.
     * @param  filename The path to the file
     * @param  point    A point to move the cursor to
     * @return          The markdown link
     */
    markdownFileLink(filename: string, point: atom.Point): string;
    static diagnosticSeverityToSeverity(severity: number): 'error' | 'warning' | 'info';
    getDiagnosticCode(editor: atom.TextEditor, range: atom.Range, text: string): DiagnosticCode | null;
}
